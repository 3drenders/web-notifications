{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///web-notifications.min.js","webpack:///webpack/bootstrap 338d98a1db39dffad7e4","webpack:///./src/index.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","window","defineWn","wn","getPermission","Notification","permission","console","log","requestPermission","alert","send","title","message","timeout","icon","options","body","notification","setTimeout","close","bind"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,OAAA,uBAAAH,GACA,gBAAAC,SACAA,QAAA,qBAAAD,IAEAD,EAAA,qBAAAC,KACCK,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAP,OAGA,IAAAC,GAAAO,EAAAD,IACAP,WACAS,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAS,QAAA,EAGAT,EAAAD,QAvBA,GAAAQ,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,KDgBM,SAASL,EAAQD,GAEtB,cExDD,SAAWe,GAGT,QAASC,KACP,GAAIC,KAmCJ,OAjCAA,GAAGC,cAAgB,WAGX,gBAAkBH,GAIe,YAA5BI,aAAaC,WAEtBC,QAAQC,IAAI,yCAGyB,YAA5BH,aAAaC,YAEtBD,aAAaI,kBAAkB,SAAUH,GAEpB,YAAfA,GACFC,QAAQC,IAAI,2CAbhBE,MAAM,uDAmBVP,EAAGQ,KAAO,SAAUC,EAAOC,EAASC,EAASC,GAC3C,GAAIC,IACFC,KAAMJ,EACNE,KAAMA,GAGJG,EAAe,GAAIb,cAAaO,EAAOI,EAE3CG,YAAWD,EAAaE,MAAMC,KAAKH,GAAeJ,IAE7CX,EAGS,mBAAPA,IACTF,EAAOE,GAAKD,IAEZK,QAAQC,IAAI,wBAEbP","file":"web-notifications.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"web-notifications\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"web-notifications\"] = factory();\n\telse\n\t\troot[\"web-notifications\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"web-notifications\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"web-notifications\"] = factory();\n\telse\n\t\troot[\"web-notifications\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t(function (window) {\n\t\n\t  'use strict';\n\t\n\t  function defineWn() {\n\t    var wn = {};\n\t\n\t    wn.getPermission = function () {\n\t\n\t      // Check if the browser supports web notifications\n\t      if (!('Notification' in window)) {\n\t        alert('This browser does not support system notifications');\n\t\n\t        // If there is support, check if the permission is already set.\n\t      } else if (Notification.permission === 'granted') {\n\t        // Print to log if acces is granted\n\t        console.log('Web Notifications: Permission Granted');\n\t\n\t        // Else, we ask the user for permission\n\t      } else if (Notification.permission !== 'granted') {\n\t\n\t        Notification.requestPermission(function (permission) {\n\t          // If the user accepts, log the succes message\n\t          if (permission === 'granted') {\n\t            console.log('Web Notifications: Permission Granted');\n\t          }\n\t        });\n\t      }\n\t    };\n\t\n\t    wn.send = function (title, message, timeout, icon) {\n\t      var options = {\n\t        body: message,\n\t        icon: icon\n\t      };\n\t\n\t      var notification = new Notification(title, options);\n\t\n\t      setTimeout(notification.close.bind(notification), timeout);\n\t    };\n\t    return wn;\n\t  }\n\t\n\t  if (typeof wn === 'undefined') {\n\t    window.wn = defineWn();\n\t  } else {\n\t    console.log('wn already defined.');\n\t  }\n\t})(window);\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** web-notifications.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 338d98a1db39dffad7e4\n **/","(function (window) {\n\n  'use strict';\n  function defineWn() {\n    var wn = {};\n\n    wn.getPermission = function () {\n\n      // Check if the browser supports web notifications\n      if (!('Notification' in window)) {\n        alert('This browser does not support system notifications');\n\n        // If there is support, check if the permission is already set.\n      } else if (Notification.permission === 'granted') {\n        // Print to log if acces is granted\n        console.log('Web Notifications: Permission Granted');\n\n        // Else, we ask the user for permission\n      } else if (Notification.permission !== 'granted') {\n\n        Notification.requestPermission(function (permission) {\n        // If the user accepts, log the succes message\n          if (permission === 'granted') {\n            console.log('Web Notifications: Permission Granted');\n          }\n        });\n      }\n    };\n\n    wn.send = function (title, message, timeout, icon) {\n      var options = {\n        body: message,\n        icon: icon\n      };\n\n      var notification = new Notification(title, options);\n\n      setTimeout(notification.close.bind(notification), timeout);\n    };\n    return wn;\n  }\n\n  if (typeof wn === 'undefined') {\n    window.wn = defineWn();\n  } else {\n    console.log('wn already defined.');\n  }\n})(window);\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/index.js\n **/"],"sourceRoot":""}